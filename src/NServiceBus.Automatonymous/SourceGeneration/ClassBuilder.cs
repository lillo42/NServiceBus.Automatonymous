using System;
using System.Collections.Generic;
using System.Text;

namespace NServiceBus.Automatonymous.SourceGeneration;

internal class ClassBuilder
{
    private readonly StringBuilder _sb;

    public ClassBuilder(StringBuilder sb)
    {
        _sb = sb;
    }

    private string _className = string.Empty;
    public string ClassName => _className;
    
    public ClassBuilder SetClassName(string className)
    {
        _className = className;
        return this;
    }

    private string _baseType = string.Empty;

    public ClassBuilder SetBaseType(string baseType)
    {
        _baseType = baseType;
        return this;
    }
    

    private string _namespace = string.Empty;
    public ClassBuilder SetNamespace(string @namespace)
    {
        _namespace = @namespace;
        return this;
    }

    private readonly HashSet<string> _usings = new();

    public ClassBuilder AddUsing(string @using)
    {
        _usings.Add(@using);
        return this;
    }
    
    public ClassBuilder AddUsing(IEnumerable<string> @usings)
    {
        foreach (var @using in @usings)
        {
            _usings.Add(@using);
        }
        return this;
    }

    private readonly HashSet<string> _methods = new();

    public ClassBuilder AddMethod(string method)
    {
        _methods.Add(method);
        return this;
    }
    
    public ClassBuilder AddMethods(IEnumerable<string> methods)
    {
        foreach (var method in methods)
        {
            _methods.Add(method);
        }
        
        return this;
    }
    
    private readonly HashSet<string> _interfaces = new();

    public ClassBuilder AddInterfaces(IEnumerable<string> interfaces)
    {
        foreach (var @interface in interfaces)
        {
            _interfaces.Add(@interface);
        }

        return this;
    }

    public override string ToString()
    {
        _sb.Clear();
        _sb.AppendLine(@"/// <auto-generated>
///     Code generated by NServiceBus.Automatonymous
/// </auto-generated>
");

        foreach (var @using in _usings)
        {
            _sb.AppendLine($"using {@using};");
        }

        _sb.AppendLine();

        _sb.AppendLine($"namespace {_namespace};")
            .AppendLine()
            .AppendLine($"public partial class {_className} : {_baseType}, {string.Join(", ", _interfaces)}")
            .AppendLine("{");

        foreach (var method in _methods)
        {
            _sb.AppendLine(IndentSource(method));
        }
        
        _sb.AppendLine("}");
        return _sb.ToString();

        static string IndentSource(string source)
        {
            return source.Replace(Environment.NewLine, $"{Environment.NewLine}{new string(' ', 4)}");
        }
    }
}